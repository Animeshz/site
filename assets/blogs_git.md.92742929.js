import{_ as r,H as e,o as l,c,C as o,a as i,t as y,J as C,E as u,V as m,D as h,G as d}from"./chunks/framework.d1c50dd7.js";const b="/site/assets/cover.5b644913.jpg",P=JSON.parse(`{"title":"Learn Git - The easy way","description":"The first and last article you'll ever need to master git","frontmatter":{"title":"Learn Git - The easy way","description":"The first and last article you'll ever need to master git","created":"2022-09-27 3:10 AM","image":"/blogs/git/cover.jpg","tags":["git","version-control"]},"headers":[],"relativePath":"blogs/git.md","filePath":"blogs/git.md","lastUpdated":1687036659000}`),D={name:"blogs/git.md"},g={id:"frontmatter-title",tabindex:"-1"},A=o("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),f=m('<p><strong>Git</strong> is a robust tool, to manage your complex to complex workflows. It was primarily made for managing the Linux Kernel (by Linus Torvalds itself) which today recieves and accepts over 8.5 changes/hour.</p><p>There are various use-cases of git:</p><ul><li>It helps you to parallely work on different parts of a single project.</li><li>Stop working on one feature for a bit, work on another and resume later, etc.</li><li>Keep history of a software safe, revert to any point if needed.</li></ul><p>and many more.</p><p><img src="'+b+`" alt="Cover Image"></p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>On Unix systems (Linux/Mac) git should most probably be pre-installed, on Windows follow the <a href="https://git-scm.com/download/win" target="_blank" rel="noreferrer">installation-instructions</a>.</p><p>Once installed, open your favourite terminal, and run:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user.name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">your-nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user.email</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">your-emai</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># should match the one in your github/gitlab</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>You don&#39;t need to have github/gitlab account yet, just make sure to put the email that you&#39;d be using for github/gitlab.</p><h2 id="get-started" tabindex="-1">Get Started <a class="header-anchor" href="#get-started" aria-label="Permalink to &quot;Get Started&quot;">​</a></h2><h3 id="create-clone-a-git-repository" tabindex="-1">Create/Clone a git repository <a class="header-anchor" href="#create-clone-a-git-repository" aria-label="Permalink to &quot;Create/Clone a git repository&quot;">​</a></h3><p>Now open your favourite terminal in any directory (possibly empty), and run:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Creates a new repository</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Clone an existing repository from web</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/Animeshz/site</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">site</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>This will initialize a git repository, namely a <code>.git</code> folder would&#39;ve created in that directory.</p><h3 id="your-first-commit" tabindex="-1">Your First Commit <a class="header-anchor" href="#your-first-commit" aria-label="Permalink to &quot;Your First Commit&quot;">​</a></h3><p>Commits record changes in a git repository.</p><p>Create any file and write anything. And now run:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># you should see that it reports you created a new file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">My First Commit</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># yay! you committed for the first time</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>This creates a commit in the repository you just initialized a moment earlier.</p><h2 id="concept-of-remotes" tabindex="-1">Concept of Remotes <a class="header-anchor" href="#concept-of-remotes" aria-label="Permalink to &quot;Concept of Remotes&quot;">​</a></h2><p>A git repository, can be moved to/from any other locations, just as you see above that you can clone repository over https.</p><p>A <strong>remote</strong> is simply any path or url, you wish to publish your repostitory to.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;">                          </span><span style="color:#676E95;font-style:italic;"># lists all remotes</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">path-or-ur</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># adds a remote</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remove</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># removes a remote</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># misc stuffs</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get-url</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set-url</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">path-or-ur</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>If you&#39;ve cloned a repository you would automatically have a remote named <code>origin</code> added up pointing to the url you used to clone the repository.</p><h3 id="hosting-to-github-gitlab" tabindex="-1">Hosting to Github/Gitlab <a class="header-anchor" href="#hosting-to-github-gitlab" aria-label="Permalink to &quot;Hosting to Github/Gitlab&quot;">​</a></h3><p><a href="https://github.com" target="_blank" rel="noreferrer">Github</a> and <a href="https://gitlab.com" target="_blank" rel="noreferrer">Gitlab</a> are two <strong>most popular free-to-use git repository</strong> hosting services. To host your repository there, simply create a free account and head over to <a href="https://github.com/new" target="_blank" rel="noreferrer">github.com/new</a> or <a href="https://gitlab.com/projects/new" target="_blank" rel="noreferrer">gitlab.com/projects/new</a> to create your repository.</p><p>These services have stopped authentication using passwords, so in order to push something you also have to create either <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token" target="_blank" rel="noreferrer">Personal Access Token (PAT)</a> or <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh" target="_blank" rel="noreferrer">SSH Key</a>. Creating a SSH key is quite overwhelming initially, so I&#39;d recommend creating a PAT.</p><p>Then add a remote to the repository url:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># PAT</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">use</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">PA</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">@github.com/</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">use</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">repositor</span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># SSH</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">use</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">repositor</span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="hosting-to-local-path" tabindex="-1">Hosting to local path <a class="header-anchor" href="#hosting-to-local-path" aria-label="Permalink to &quot;Hosting to local path&quot;">​</a></h3><p>You don&#39;t need Github/Gitlab to keep your work safe, <strong>for instance if you work to freelance/privately</strong> you can still use git and keep your changes safe in a HDD.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/path/to/HDD</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">repo-destination</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">repo-destination</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--bare</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/path/to/your/repo</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/path/to/HDD/repo-destination</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="pushing-changes" tabindex="-1">Pushing Changes <a class="header-anchor" href="#pushing-changes" aria-label="Permalink to &quot;Pushing Changes&quot;">​</a></h3><p>Now you&#39;d be able to push your commits by running:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Note:</strong> You may need to run <code>git push -u origin main</code> in case you&#39;re pushing for the first time.</p><h2 id="contributing-to-others-repository" tabindex="-1">Contributing to Others Repository <a class="header-anchor" href="#contributing-to-others-repository" aria-label="Permalink to &quot;Contributing to Others Repository&quot;">​</a></h2><h3 id="forks" tabindex="-1">Forks <a class="header-anchor" href="#forks" aria-label="Permalink to &quot;Forks&quot;">​</a></h3><p>Used to create a copy of repository in your account within github/gitlab.</p><p>There&#39;s a fork button in top of repository, tap to fork it! <strong>You can only make changes in your account. If you want to contribute to others, you&#39;d need to first fork it to your account make changes and then send a PR.</strong></p><p><img src="https://docs.github.com/assets/cb-23088/images/help/repository/fork_button.png" alt="Fork Btn"></p><h3 id="pull" tabindex="-1">Pull <a class="header-anchor" href="#pull" aria-label="Permalink to &quot;Pull&quot;">​</a></h3><p>Used to update local repository to sync with any remote.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">fork</span><span style="color:#A6ACCD;">\\&#39;</span><span style="color:#C3E88D;">s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">original</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ur</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Note:</strong> If you already made some changes in your local copy of repository you may need to run <code>git pull --rebase upstream main</code> instead.</p><h3 id="branches" tabindex="-1">Branches <a class="header-anchor" href="#branches" aria-label="Permalink to &quot;Branches&quot;">​</a></h3><p>Used to work on different parts of the project parallely.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># list out all branches in current repository</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># creates and switches to branch &lt;name&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># switches to branch &lt;name&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>main</code> is the name of default branch, and you were working on the main branch since then. (Few years ago default was <code>master</code>)</p><div class="tip custom-block"><p class="custom-block-title">ProTip</p><p>Appending <code>/network</code> to any repository hosted on github previews commit-movement over branches. For example, <a href="https://github.com/elkowar/eww/network" target="_blank" rel="noreferrer">https://github.com/elkowar/eww/network</a>.</p></div><h3 id="merge" tabindex="-1">Merge <a class="header-anchor" href="#merge" aria-label="Permalink to &quot;Merge&quot;">​</a></h3><p>Used to merge one branch into another (done by project maintainers).</p><p>Parallel work are merged into one by using merge!</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># pulls the changes from &lt;branch-name&gt; and merge into current branch</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">branc</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">remot</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">branc</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>MergeConflicts:</strong> Refer to the <a href="https://git-scm.com/book/en/v2/Git-Tools-Advanced-Merging" target="_blank" rel="noreferrer">Advanced Merging</a> to know about it, or understand how to resolve it.</p><h3 id="pr-mr" tabindex="-1">PR/MR <a class="header-anchor" href="#pr-mr" aria-label="Permalink to &quot;PR/MR&quot;">​</a></h3><p>PullRequest (AKA MergeRequest) are used to make the upstream project maintainer know that you&#39;re trying to contribute to his/her repository. He/She may accept your PR/MR, ask more changes, or reject it.</p><p>To create a PR, head over to github/gitlab&#39;s upstream repository, append <code>/pulls</code> to the url and click <code>New pull request</code></p><h3 id="issues" tabindex="-1">Issues <a class="header-anchor" href="#issues" aria-label="Permalink to &quot;Issues&quot;">​</a></h3><p>Generally look for issues, or create them first if you see any undesired behavior in the project or any potential feature is missing. Then try to solve them and send a PR. Issues are present in any repository by appending <code>/issues</code> at the url.</p><h2 id="other-useful-stuffs" tabindex="-1">Other Useful Stuffs <a class="header-anchor" href="#other-useful-stuffs" aria-label="Permalink to &quot;Other Useful Stuffs&quot;">​</a></h2><h3 id="diff" tabindex="-1">Diff <a class="header-anchor" href="#diff" aria-label="Permalink to &quot;Diff&quot;">​</a></h3><p>Git&#39;s diff uses <a href="https://en.wikipedia.org/wiki/Diff#Unified_format" target="_blank" rel="noreferrer">Unix&#39;s Unified Diff Format</a> and are very useful to <strong>review your changes before committing</strong>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">diff</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">diff</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--staged</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># if you ran &#39;git add .&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="shallow-clone" tabindex="-1">Shallow Clone <a class="header-anchor" href="#shallow-clone" aria-label="Permalink to &quot;Shallow Clone&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Clones only the latest 1 commit from the repository</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--depth=1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">ur</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Unshallow (in case you need full history later)</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--unshallow</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="reverting" tabindex="-1">Reverting <a class="header-anchor" href="#reverting" aria-label="Permalink to &quot;Reverting&quot;">​</a></h3><p>You can revert to any commit in the past by:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Checkout commit leaving current branch in detached state</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">commit-has</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Reset current branch to &lt;commit-hash&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--soft</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">commit-has</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--hard</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">commit-has</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># overwrites untracked files too, riskier</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>A commit-hash look like <code>6b1328c</code> can be viewed using <code>git log</code>, and alternatively <code>HEAD~2</code> is fancy way of referring to 3rd last commit in current branch.</p><p><strong>Note: You don&#39;t need to know this if you know rebase (below).</strong></p><h3 id="rebase-chance-to-edit-commits" tabindex="-1">Rebase (Chance to edit commits) <a class="header-anchor" href="#rebase-chance-to-edit-commits" aria-label="Permalink to &quot;Rebase (Chance to edit commits)&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">Description</p><p>Ever happened you created commit at wrong stage, or named the commit wrong, or anything like that? Rebase is at your rescue.</p></div><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">core.editor</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">code</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># set default editor to vscode</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HEAD~n</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># n is number of commits you wanna open editor for</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--root</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># edit every single commit from root of the branch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Your preferred editor should pop up with the following looking contents:</p><div class="language-git-rebase line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">git-rebase</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">pick</span><span style="color:#A6ACCD;"> 611ca3b Changes 1</span></span>
<span class="line"><span style="color:#82AAFF;">pick</span><span style="color:#A6ACCD;"> c399eb9 Changes 2</span></span>
<span class="line"><span style="color:#82AAFF;">pick</span><span style="color:#A6ACCD;"> 76e2269 Changes 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Rebase 5c7e4cf..76e2269 onto 5c7e4cf (3 commands)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Commands:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># p, pick &lt;commit&gt; = use commit</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># e, edit &lt;commit&gt; = use commit, but stop for amending</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># f, fixup [-C | -c] &lt;commit&gt; = like &quot;squash&quot; but keep only the previous</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#                    commit&#39;s log message, unless -C is used, in which case</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#                    keep only this commit&#39;s message; -c is same as -C but</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#                    opens the editor</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># b, break = stop here (continue rebase later with &#39;git rebase --continue&#39;)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># d, drop &lt;commit&gt; = remove commit</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># l, label &lt;label&gt; = label current HEAD with a name</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># t, reset &lt;label&gt; = reset HEAD to a label</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .       create a merge commit using the original merge commit&#39;s</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .       message (or the oneline, if no original merge commit was</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># .       specified); use -c &lt;commit&gt; to reword the commit message</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># These lines can be re-ordered; they are executed from top to bottom.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># However, if you remove everything, the rebase will be aborted.\`\`</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>You can move the lines up/down to change the order of commit, or delete them to remove the commit from middle of the repository.</p><p>You can change the command (one letter as well as full-name is accepted), from <code>pick</code> to anything as listed. They&#39;re self-explainatory there.</p><h3 id="reflog" tabindex="-1">RefLog <a class="header-anchor" href="#reflog" aria-label="Permalink to &quot;RefLog&quot;">​</a></h3><p>Like <code>git log</code> but also shows every incident when the tip of the branch (HEAD) is changed (from rebase/pull/merge/etc). Useful to revert any risky operations which changed commit-history.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reflog</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">show</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>ProTip:</strong> From the collected hash (looking like <code>5c7e4cf</code>) you can view the changes in that commit using: <code>git show 5c7e4cf</code>.</p><h3 id="stash" tabindex="-1">Stash <a class="header-anchor" href="#stash" aria-label="Permalink to &quot;Stash&quot;">​</a></h3><p>Another very useful feature of git is to stash your work temporarily, start working on other stuffs, and then come-back to where you were.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">My first stash</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># work-tree should now be reset to last commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pop</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># apply and removes latest (0th) stash</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apply</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># applies but doesn&#39;t remove latest (0th) stash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,86);function F(s,E,v,k,w,B){const t=e("BlogMetadata"),p=e("ClientOnly");return l(),c("div",null,[o("h1",g,[i(y(s.$frontmatter.title)+" ",1),A]),C(p,null,{default:u(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),h(t,{key:0,frontmatter:s.$frontmatter,wordCount:1319},null,8,["frontmatter"])):d("",!0)]}),_:1}),f])}const _=r(D,[["render",F]]);export{P as __pageData,_ as default};
