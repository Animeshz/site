import{_ as r,c as a,a as e,b as t,t as n,e as s,w as l,d as h,r as d,o as u}from"./app.329dfb41.js";const _=JSON.parse('{"title":"Linux (1/2) - A near surface exploration","description":"","frontmatter":{"title":"Linux (1/2) - A near surface exploration","slug":"linux-1"},"headers":[{"level":2,"title":"A brief history","slug":"a-brief-history","link":"#a-brief-history","children":[]},{"level":2,"title":"What is Linux?","slug":"what-is-linux","link":"#what-is-linux","children":[{"level":3,"title":"TL;DR","slug":"tl-dr","link":"#tl-dr","children":[]},{"level":3,"title":"TS;WantMore?","slug":"ts-wantmore","link":"#ts-wantmore","children":[]}]},{"level":2,"title":"The Shell","slug":"the-shell","link":"#the-shell","children":[]},{"level":2,"title":"More in the core of Linux","slug":"more-in-the-core-of-linux","link":"#more-in-the-core-of-linux","children":[{"level":3,"title":"The filesystem","slug":"the-filesystem","link":"#the-filesystem","children":[]}]},{"level":2,"title":"More stuffs, TODO.","slug":"more-stuffs-todo","link":"#more-stuffs-todo","children":[]}],"relativePath":"blogs/linux-1.md"}'),c={name:"blogs/linux-1.md"},p={id:"frontmatter-title",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),f=t("Intelligence is the ability to avoid doing work, yet getting the work done."),g=h(`<p>This article enlists facts and useful information with my experience in using linux for years.</p><h2 id="a-brief-history" tabindex="-1">A brief history <a class="header-anchor" href="#a-brief-history" aria-hidden="true">#</a></h2><p><strong>Linux</strong> was started just as a hobby project by a guy named Linus Torvalds, it was first publically announced in August 25, 1991 with the following email in the Minix group.</p><pre style="font-size:14px;overflow-x:auto;"><blockquote>
  From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
  Newsgroups: comp.os.minix
  Subject: What would you like to see most in minix?
  Summary: small poll for my new operating system
  Message-ID:
  Date: Sun, 25 Aug 91 20:57:08 GMT
  Organization: University of Helsinki

  Hello everybody out there using minix -

  I&#39;m doing a (free) operating system (just a hobby, won&#39;t be big and
  professional like gnu) for 386(486) AT clones.  This has been brewing
  since april, and is starting to get ready.  I&#39;d like any feedback on
  things people like/dislike in minix, as my OS resembles it somewhat
  (same physical layout of the file-system (due to practical reasons)
  among other things).

  I&#39;ve currently ported bash(1.08) and gcc(1.40), and things seem to work.
  This implies that I&#39;ll get something practical within a few months, and
  I&#39;d like to know what features most people would want.  Any suggestions
  are welcome, but I won&#39;t promise I&#39;ll implement them :-)

                Linus (torvalds@kruuna.helsinki.fi)

  PS.  Yes - it&#39;s free of any minix code, and it has a multi-threaded fs.
  It is NOT protable (uses 386 task switching etc), and it probably never
  will support anything other than AT-harddisks, as that&#39;s all I have :-(.
</blockquote>
</pre><p>Who knew it&#39;d be powering 96.3% of the top 1M websites today, being the only operating-system targeting both the embedded devices such as car&#39;s music &amp; video system and the world&#39;s most powerful supercomputers, assisting to complete over 65 SpaceX missions, with reliance of over 60% in auto-shipments industry, become the preferred platform for IoT &amp; backbone of Android powering over 85% of the daily internet users, and helping in manifestation of over 90% of special effects used in hollywood movies (including StarWars, LordOfRings, and HarryPotter).</p><p>Linux (kernel) today is considered to be the <em>most important</em> software project in the history. It recieves and merges over 8.5 impactful changes on average every single hour in a day.</p><h2 id="what-is-linux" tabindex="-1">What is Linux? <a class="header-anchor" href="#what-is-linux" aria-hidden="true">#</a></h2><h3 id="tl-dr" tabindex="-1">TL;DR <a class="header-anchor" href="#tl-dr" aria-hidden="true">#</a></h3><p>Linux is a <a href="https://www.javatpoint.com/monolithic-structure-of-operating-system" target="_blank" rel="noreferrer">monolithic kernel</a>, which gives you building blocks that are just sufficient enough for doing everything.</p><h3 id="ts-wantmore" tabindex="-1">TS;WantMore? <a class="header-anchor" href="#ts-wantmore" aria-hidden="true">#</a></h3><p>One of the greatest speciality about Linux is that it is a monolithic kernel, which means it&#39;s <em>self-sufficient</em> to run on variety of devices from smart watches &amp; cars TO desktop TO workstations &amp; supercomputers out-of-the-box.</p><p>Note the word &#39;kernel&#39; used above, Linux is not an Operating System in itself, it knows how to do things but it doesn&#39;t care anyhow what it has to do. It provides a stable and standard API to interact with any particular type of physical object (we&#39;ll talk more on this later in the article). This creates enormous amount of possibilities to easily create various frontends for interacting with it (or indirectly the hardware).</p><p>It basically goes like: <em>I&#39;M HERE GUYS, YOU DON&#39;T NEED TO WORRY ABOUT WHICH PARTICULAR DEVICE YOU&#39;RE TARGETING BE IT AMD, INTEL, NVIDIA, LOGITECH, OR WESTERN DIGITAL JUST TELL ME WHAT YOU WANT TO DO, I&#39;LL FIGURE OUT HOW TO DO THAT.</em></p><p>And yes, that means it doesn&#39;t even contain a display server in itself, as per say it doesn&#39;t know what to draw (yet definitely know how to draw), making it possible for developers &amp; users to instruct what it has to draw (with display server of your choice) and where it has to draw (with window manager of your choice).</p><p>For instance lookup <a href="https://www.reddit.com/r/unixporn" target="_blank" rel="noreferrer">r/unixporn</a>, a subreddit where users actively post their screenshots of desktop look, that they customize themselves.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>A precious resource I could never forget about while talking about kernel: <a href="https://linux-kernel-labs.github.io/refs/heads/master/lectures/intro.html" target="_blank" rel="noreferrer">Linux Kernel Labs</a>.</p></div><h2 id="the-shell" tabindex="-1">The Shell <a class="header-anchor" href="#the-shell" aria-hidden="true">#</a></h2><p>The primary way of interaction, inherited from <a href="https://en.wikipedia.org/wiki/Unix" target="_blank" rel="noreferrer">Unix</a> is a command-line interface.</p><p><strong>A shell</strong> (e.g. dash, bash, zsh, fish) is thus referred to a command-line waiting for you to give a signal so that it instructs the linux what it has to do next. Btw, all your autocompletion and color-highlighting comes from your shell only.</p><p>There is three more terms you may have heard of that are terminal, prompt &amp; the console. These three are sometimes used interchangeably, but they completely differ in their purpose.</p><p><strong>Terminal</strong> (e.g. kitty, alacritty, konsole, gnome-terminal, xfce4-terminal) is just a graphical window which controls how to display the things, managing the visual part of shell (or any other program really) like font, size of text, padding, line-height, etc. It really has nothing to do with linux, its here just to provide a better UI/UX to the user while interacting with the Linux and not get feeling like controlling a 8-bit computer in 1980s from <a href="https://itsfoss.com/what-is-tty-in-linux" target="_blank" rel="noreferrer">tty</a>.</p><p><strong>Prompt</strong> is referred to <code>$ </code> or equivalent usually seen in a terminal right before place where we write a command. Can be customized to provide useful status like battery levels, git branches, etc. e.g. <a href="https://starship.rs" target="_blank" rel="noreferrer">starship</a> &amp; <a href="https://github.com/romkatv/powerlevel10k" target="_blank" rel="noreferrer">p10k</a> are two of most popular options available today which replaces your old-day prompt with something giving more useful informations.</p><p><strong>Console</strong> is used to collectively refer to all three: shell, prompt and terminal.</p><h2 id="more-in-the-core-of-linux" tabindex="-1">More in the core of Linux <a class="header-anchor" href="#more-in-the-core-of-linux" aria-hidden="true">#</a></h2><h3 id="the-filesystem" tabindex="-1">The filesystem <a class="header-anchor" href="#the-filesystem" aria-hidden="true">#</a></h3><p>This is the <em><strong>most exciting thing</strong></em> I usually like to talk about in Linux, that is, everything in the universe is seen as a file to the Linux. Be it your physcial disk, your logical partitions, your usb peripheral including your mouse and keyboard, wifi-card or processor, ramdisk or folders, whatever you can ever imagine is a file.</p><p>Its not always true that files that are seen are populated by or saved in the disk. Files under <code>/proc</code>, <code>/sys</code>, <code>/dev</code>, <code>/run</code> and <code>/tmp</code> don&#39;t actually exist in the disk. They contain virtual files, for instance latter two saves files in RAM.</p><p>AND that simply means, you don&#39;t need to learn hundred different tools to do something new. Just use whatever you use to edit files and you&#39;re done!</p><h2 id="more-stuffs-todo" tabindex="-1">More stuffs, TODO. <a class="header-anchor" href="#more-stuffs-todo" aria-hidden="true">#</a></h2>`,29);function y(i,w,b,k,v,x){const o=d("Quote");return u(),a("div",null,[e("h1",p,[t(n(i.$frontmatter.title)+" ",1),m]),s(o,{author:"Linus Torvalds"},{default:l(()=>[f]),_:1}),g])}const I=r(c,[["render",y]]);export{_ as __pageData,I as default};
