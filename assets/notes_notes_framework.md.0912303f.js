import{_ as e,c as n,a as s,b as l,t as o,d as r,o as p}from"./app.64fe1d37.js";const h=JSON.parse('{"title":"Framework","description":"","frontmatter":{"title":"Framework","created":"2022-10-13T00:00:00.000Z"},"headers":[{"level":2,"title":"Useful Keys","slug":"useful-keys","link":"#useful-keys","children":[]},{"level":2,"title":"fw-ectool","slug":"fw-ectool","link":"#fw-ectool","children":[]},{"level":2,"title":"Bios Update","slug":"bios-update","link":"#bios-update","children":[]},{"level":2,"title":"More Information","slug":"more-information","link":"#more-information","children":[]}],"relativePath":"notes/notes/framework.md"}'),t={name:"notes/notes/framework.md"},c={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),u=r(`<h2 id="useful-keys" tabindex="-1">Useful Keys <a class="header-anchor" href="#useful-keys" aria-hidden="true">#</a></h2><div class="language-lua line-numbers-mode"><button class="copy"></button><span class="lang">lua</span><pre><code><span class="line"><span style="color:#A6ACCD;">F2    BIOS</span></span>
<span class="line"><span style="color:#A6ACCD;">F12   Boot Menu</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Fn</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">Esc    Fn Lock</span></span>
<span class="line"><span style="color:#A6ACCD;">Fn</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">Space  Backlit level</span><span style="color:#89DDFF;">++</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="fw-ectool" tabindex="-1">fw-ectool <a class="header-anchor" href="#fw-ectool" aria-hidden="true">#</a></h2><p>Since framework uses chromium-ec for its EmbeddedController, its possible to use ectool to control various low-level hardware that are not exposed to the kernel in most-cases.</p><p>Here are my favourite usecases:</p><div class="language-bash line-numbers-mode"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">sudo fw-ectool fanduty 0    </span><span style="color:#676E95;"># sets fan speed to 0%, or any desired level</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo fw-ectool autofanctrl  </span><span style="color:#676E95;"># reset to automatic fan ctrl</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo fw-ectool pwmgetfanrpm </span><span style="color:#676E95;"># get current fan rpm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sudo fw-ectool led right query  </span><span style="color:#676E95;"># query available colors (right)</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo fw-ectool led left </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># set custom colors on various leds</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo fw-ectool led right </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo fw-ectool led power </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sudo fw-ectool fwchargelimit 80   </span><span style="color:#676E95;"># limit charging to hit maximum 80</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Read <a href="https://www.howett.net/posts/2021-12-framework-ec" target="_blank" rel="noreferrer">this</a> for further use of this tool (written by same guy who patched ectool to work for framework).</p><h2 id="bios-update" tabindex="-1">Bios Update <a class="header-anchor" href="#bios-update" aria-hidden="true">#</a></h2><p>Framework BIOS updates can be triggerred from within Linux (requires <code>fwupd</code> package):</p><div class="language-bash line-numbers-mode"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">sudo fwupdmgr enable-remote lvfs-testing</span></span>
<span class="line"><span style="color:#A6ACCD;">grep -qxF </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">DisableCapsuleUpdateOnDisk=true</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> /etc/fwupd/uefi_capsule.conf </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">DisableCapsuleUpdateOnDisk=true</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sudo tee --append /etc/fwupd/uefi_capsule.conf</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sudo fwupdmgr update</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="more-information" tabindex="-1">More Information <a class="header-anchor" href="#more-information" aria-hidden="true">#</a></h2><ul><li><a href="https://wiki.archlinux.org/title/Framework_Laptop" target="_blank" rel="noreferrer">Framework Laptop - ArchWiki</a></li><li><a href="https://discord.gg/Framework" target="_blank" rel="noreferrer">Framework Discord</a> &amp; <a href="https://community.frame.work" target="_blank" rel="noreferrer">Framework Community</a></li></ul>`,12);function d(a,m,f,D,y,b){return p(),n("div",null,[s("h1",c,[l(o(a.$frontmatter.title)+" ",1),i]),u])}const A=e(t,[["render",d]]);export{h as __pageData,A as default};
